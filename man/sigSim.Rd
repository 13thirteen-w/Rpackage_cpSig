% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpSig.R
\name{sigSim}
\alias{sigSim}
\title{Get the similarity score of a tumor sample with mSignaturedb}
\usage{
sigSim(trTmMut, clinicalData, tmMutRef = mSigdb, contexts.needed = FALSE,
  tri.counts.method = "default")
}
\arguments{
\item{trTmMut}{Either a data frame or location of input text file, where rows are samples, columns are trinucleotide contexts.
Use data(sample.mut.trans) to see the example data.}

\item{clinicalData}{Location of the mutation file that is to be converted or name of data frame in environment.
Include country and site information of every sample in trTmMut.
Use data("sample.clinical") to see the example data.}

\item{tmMutRef}{Location of the mutation file that is to be converted or name of data frame in environment.
"tmMutRef" is the standard signature value for one site and one country.
Default value is "mSigdb" that convert from "mSignatureDB" database.
USe data("mSigdb") to see the example dasta.}

\item{contexts.needed}{FALSE if tumor.file is a context file, TRUE if it is only mutation counts.}

\item{tri.counts.method}{Set to either:
\itemize{
 \item 'default' -- no further normalization \item 'exome' -- normalized by
  number of times each trinucleotide context is observed in the exome \item
  'genome' -- normalized by number of times each trinucleotide context is
  observed in the genome \item 'exome2genome' -- multiplied by a ratio of that
  trinucleotide's occurence in the genome to the trinucleotide's occurence in
  the exome \item 'genome2exome' -- multiplied by a ratio of that
  trinucleotide's occurence in the exome to the trinucleotide's occurence in
  the genome \item data frame containing user defined scaling factor -- count
  data for each trinucleotide context is multiplied by the corresponding value
  given in the data frame }}
}
\value{
The similarity score of a tumor sample with mSignaturedb
}
\description{
Get the similarity score of a tumor sample with mSignaturedb
}
\examples{
testSim = sigSim(trTmMut = sample.mut.trans, clinicalData = sample.clinical, contexts.needed = TRUE)
}
